<?phpadd_action( 'wp_ajax_get-data', 'getData' );add_action( 'wp_ajax_nopriv_get-data', 'getData' );function getData(){//    print_r($_POST);    if(!empty($_POST['count'])){        $count = $_POST['count'];    }else{        $count = get_option('posts_per_page');    }    if(!empty($_POST['ptype'])){        $pType = $_POST['ptype'];    }else{        $pType = "any";    }    $args = [      'posts_per_page' => $count,      'post_type' => $pType,    ];    if(!empty($_POST['tax'])){        $taxQuery = [];        if(count($_POST['tax']) > 1){            $taxQuery = ['relation' => "AND"];        }        foreach ($_POST['tax'] as $k => $tax) {            array_push($taxQuery, [               'taxonomy' => $k,                'field' => 'term_id',                'terms' => $tax            ]);        }        $args['tax_query'] = $taxQuery;    }    if(!empty($_POST['paginate'])){        $paginate = $_POST['paginate'];    }else{        $paginate = false;    }    $obj = new WP_Query($args);    $max_num_pages = ceil($obj->found_posts / $obj->query['posts_per_page']);    if($paginate and $max_num_pages > 1){        $html = '<span class="pg-item prev"><</span>';        for($i = 1; $i <= $max_num_pages; $i++){            $html .= '<span data-page="'.$i.'" class="pg-item">'.$i.'</span>';        }        $html .= '<span class="pg-item next">></span>';    }else{        $html = '';    }    $paginateHtml = $html;    $postsHtml = '';    if(!empty($obj->posts)){        foreach ($obj->posts as $post) {            $postsHtml .= get_template_part('front/components/product-item', '', __getDataProduct($post));        }    }    wp_send_json(    [        'posts' => $postsHtml,        'paginates' => $paginateHtml,    ]);}